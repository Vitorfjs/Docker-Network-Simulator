services:
  server:
    build: 
      context: .
      dockerfile: Dockerfile.server
    container_name: server
    networks:
      server_network:
        ipv4_address: 192.168.20.10
    cap_add:
      - NET_ADMIN 

  router:
    build:
      context: .
      dockerfile: Dockerfile.router
    container_name: router
    sysctls:
      - net.ipv4.ip_forward=1
    networks:
      client_network:
        ipv4_address: 192.168.10.2
      server_network:
        ipv4_address: 192.168.20.2
    cap_add:
      - NET_ADMIN

  client1:
    build:
      context: .
      dockerfile: Dockerfile.client
    container_name: client1
    networks:
      client_network:
        ipv4_address: 192.168.10.10
    cap_add:
      - NET_ADMIN
    dns: 
      - 192.168.20.10
    depends_on:
      - router
      - server
    
  client2:
    build:
      context: .
      dockerfile: Dockerfile.client
    container_name: client2
    networks:
      client_network:
        ipv4_address: 192.168.10.20
    cap_add:
      - NET_ADMIN
    dns: 
      - 192.168.20.10
    depends_on:
      - router
      - server

  client3:
    build:
      context: .
      dockerfile: Dockerfile.client
    container_name: client3
    networks:
      client_network:
        ipv4_address: 192.168.10.30
    cap_add:
      - NET_ADMIN
    dns: 
      - 192.168.20.10
    depends_on:
      - router
      - server

networks:
  client_network:
    driver: bridge
    ipam:
      config:
        - subnet: 192.168.10.0/24

  server_network: 
    driver: bridge
    ipam:
      config:
        - subnet: 192.168.20.0/24